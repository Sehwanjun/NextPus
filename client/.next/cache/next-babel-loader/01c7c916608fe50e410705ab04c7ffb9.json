{"ast":null,"code":"import axios from 'axios';\nimport { delay, put, all, fork, takeLatest } from \"redux-saga/effects\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000); // 임시보류 const result = yield call(addPostAPI, action.data);\n\n    yield put({\n      type: \"ADD_POST_SUCCESS\" // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/sagas/post.js"],"names":["axios","delay","put","all","fork","takeLatest","addPostAPI","data","post","addPost","action","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,UAAhC,QAAkD,oBAAlD;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOP,KAAK,CAACQ,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMT,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;AACA,UAAMC,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,kBADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMV,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,kBADE;AAERJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUO,YAAV,GAAyB;AACvB,QAAMT,UAAU,CAAC,kBAAD,EAAqBI,OAArB,CAAhB;AACD;;AAED,eAAe,UAAUM,QAAV,GAAqB;AAClC,QAAMZ,GAAG,CAAC,CAACC,IAAI,CAACU,YAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import axios from 'axios';\r\nimport { delay, put, all, fork, takeLatest } from \"redux-saga/effects\";\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/api/post\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    yield delay(1000);\r\n    // 임시보류 const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: \"ADD_POST_SUCCESS\",\r\n      // data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"ADD_POST_FAILURE\",\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}