{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\nextpus_2020\\\\client\\\\pages\\\\_document.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import Document from \"next/document\";\n// import { ServerStyleSheet } from \"styled-components\";\n// export default class MyDocument extends Document {\n//   static async getInitialProps(ctx) {\n//     const sheet = new ServerStyleSheet();\n//     const originalRenderPage = ctx.renderPage;\n//     try {\n//       ctx.renderPage = () =>\n//         originalRenderPage({\n//           enhanceApp: App => props => sheet.collectStyles(<App {...props} />),\n//         });\n//       const initialProps = await Document.getInitialProps(ctx);\n//       return {\n//         ...initialProps,\n//         styles: (\n//           <>\n//             {initialProps.styles}\n//             {sheet.getStyleElement()}\n//           </>\n//         ),\n//       };\n//     } finally {\n//       sheet.seal();\n//     }\n//   }\n// }\n// import React from \"react\";\n// import Document, { Head, Main, NextScript } from \"next/document\";\n// // Import styled components ServerStyleSheet\n// import { ServerStyleSheet } from \"styled-components\";\n// export default class MyDocument extends Document {\n//   static getInitialProps({ renderPage }) {\n//     // Step 1: Create an instance of ServerStyleSheet\n//     const sheet = new ServerStyleSheet();\n//     // Step 2: Retrieve styles from components in the page\n//     const page = renderPage(App => props =>\n//       sheet.collectStyles(<App {...props} />)\n//     );\n//     // Step 3: Extract the styles as <style> tags\n//     const styleTags = sheet.getStyleElement();\n//     // Step 4: Pass styleTags as a prop\n//     return { ...page, styleTags };\n//   }\n//   render() {\n//     return (\n//       <html>\n//         <Head>\n//           <title>My page</title>\n//           {/* Step 5: Output the styles in the head  */}\n//           {this.props.styleTags}\n//         </Head>\n//         <body>\n//           <Main />\n//           <NextScript />\n//         </body>\n//       </html>\n//     );\n//   }\n// }\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/styles';\nimport { ServerStyleSheet } from 'styled-components';\n\nclass _Document extends Document {\n  static async getInitialProps(ctx) {\n    const styledComponentsSheet = new ServerStyleSheet();\n    const materialSheets = new ServerStyleSheets();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => styledComponentsSheet.collectStyles(materialSheets.collect(__jsx(App, _extends({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 141\n          }\n        }))))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        styles: __jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }\n        }, initialProps.styles, materialSheets.getStyleElement(), styledComponentsSheet.getStyleElement())\n      });\n    } finally {\n      styledComponentsSheet.seal();\n    }\n  }\n\n  render() {\n    return __jsx(\"html\", {\n      lang: \"en\",\n      dir: \"ltr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 26\n      }\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 27\n      }\n    })), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 31\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 31\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 32\n      }\n    })));\n  }\n\n}\n\nexport default _Document;","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/pages/_document.js"],"names":["React","Document","Head","Main","NextScript","ServerStyleSheets","ServerStyleSheet","_Document","getInitialProps","ctx","styledComponentsSheet","materialSheets","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","collect","initialProps","styles","getStyleElement","seal","render"],"mappings":";;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AACA,MAAMC,SAAN,SAAwBN,QAAxB,CAAiC;AAC9B,eAAaO,eAAb,CAA8BC,GAA9B,EAAmC;AAChC,UAAMC,qBAAqB,GAAG,IAAIJ,gBAAJ,EAA9B;AACA,UAAMK,cAAc,GAAG,IAAIN,iBAAJ,EAAvB;AACA,UAAMO,kBAAkB,GAAGH,GAAG,CAACI,UAA/B;;AACA,QAAI;AACDJ,MAAAA,GAAG,CAACI,UAAJ,GAAiB,MAAMD,kBAAkB,CAAC;AAAEE,QAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIN,qBAAqB,CAACO,aAAtB,CAAoCN,cAAc,CAACO,OAAf,CAAuB,MAAC,GAAD,eAASF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAvB,CAApC;AAA9B,OAAD,CAAzC;;AACA,YAAMG,YAAY,GAAG,MAAMlB,QAAQ,CAACO,eAAT,CAAyBC,GAAzB,CAA3B;AACA,6CACKU,YADL;AAEEC,QAAAA,MAAM,EACH,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,YAAY,CAACC,MADhB,EAEIT,cAAc,CAACU,eAAf,EAFJ,EAGIX,qBAAqB,CAACW,eAAtB,EAHJ;AAHL;AAUU,KAbb,SAasB;AACRX,MAAAA,qBAAqB,CAACY,IAAtB;AACA;AACD;;AAACC,EAAAA,MAAM,GAAG;AACR,WACG;AAAM,MAAA,IAAI,EAAC,IAAX;AAAgB,MAAA,GAAG,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEE;AACC,MAAA,IAAI,EAAC,UADN;AAEE,MAAA,OAAO,EAAC,wEAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA,EAOM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAPN,CADH;AAcU;;AApCE;;AAuCL,eAAehB,SAAf","sourcesContent":["// import Document from \"next/document\";\r\n// import { ServerStyleSheet } from \"styled-components\";\r\n\r\n// export default class MyDocument extends Document {\r\n//   static async getInitialProps(ctx) {\r\n//     const sheet = new ServerStyleSheet();\r\n//     const originalRenderPage = ctx.renderPage;\r\n\r\n//     try {\r\n//       ctx.renderPage = () =>\r\n//         originalRenderPage({\r\n//           enhanceApp: App => props => sheet.collectStyles(<App {...props} />),\r\n//         });\r\n\r\n//       const initialProps = await Document.getInitialProps(ctx);\r\n//       return {\r\n//         ...initialProps,\r\n//         styles: (\r\n//           <>\r\n//             {initialProps.styles}\r\n//             {sheet.getStyleElement()}\r\n//           </>\r\n//         ),\r\n//       };\r\n//     } finally {\r\n//       sheet.seal();\r\n//     }\r\n//   }\r\n// }\r\n\r\n// import React from \"react\";\r\n// import Document, { Head, Main, NextScript } from \"next/document\";\r\n// // Import styled components ServerStyleSheet\r\n// import { ServerStyleSheet } from \"styled-components\";\r\n\r\n// export default class MyDocument extends Document {\r\n//   static getInitialProps({ renderPage }) {\r\n//     // Step 1: Create an instance of ServerStyleSheet\r\n//     const sheet = new ServerStyleSheet();\r\n\r\n//     // Step 2: Retrieve styles from components in the page\r\n//     const page = renderPage(App => props =>\r\n//       sheet.collectStyles(<App {...props} />)\r\n//     );\r\n\r\n//     // Step 3: Extract the styles as <style> tags\r\n//     const styleTags = sheet.getStyleElement();\r\n\r\n//     // Step 4: Pass styleTags as a prop\r\n//     return { ...page, styleTags };\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <html>\r\n//         <Head>\r\n//           <title>My page</title>\r\n//           {/* Step 5: Output the styles in the head  */}\r\n//           {this.props.styleTags}\r\n//         </Head>\r\n//         <body>\r\n//           <Main />\r\n//           <NextScript />\r\n//         </body>\r\n//       </html>\r\n//     );\r\n//   }\r\n// }\r\n\r\nimport React from 'react'; \r\nimport Document, { Head, Main, NextScript } from 'next/document'; \r\nimport { ServerStyleSheets } from '@material-ui/styles'; \r\nimport { ServerStyleSheet } from 'styled-components' \r\nclass _Document extends Document {\r\n   static async getInitialProps (ctx) {\r\n      const styledComponentsSheet = new ServerStyleSheet();\r\n      const materialSheets = new ServerStyleSheets();\r\n      const originalRenderPage = ctx.renderPage; \r\n      try {\r\n         ctx.renderPage = () => originalRenderPage({ enhanceApp: App => props => styledComponentsSheet.collectStyles(materialSheets.collect(<App {...props}/>))}); \r\n         const initialProps = await Document.getInitialProps(ctx); \r\n         return { \r\n           ...initialProps, \r\n           styles: (\r\n              <React.Fragment> \r\n                {initialProps.styles}\r\n                 {materialSheets.getStyleElement()} \r\n                 {styledComponentsSheet.getStyleElement()}\r\n                  </React.Fragment>\r\n                   )\r\n                   } \r\n                  } finally { \r\n                    styledComponentsSheet.seal();\r\n                   } \r\n                  } render() {\r\n                     return (\r\n                        <html lang=\"en\" dir=\"ltr\"> \r\n                        <Head>\r\n                         <meta charSet=\"utf-8\" />\r\n                          <meta\r\n                           name=\"viewport\"\r\n                            content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" />\r\n                             </Head>\r\n                              <body> \r\n                              <Main />\r\n                               <NextScript /> \r\n                               </body>\r\n                                </html> \r\n                                ); \r\n                              } \r\n                            } \r\n\r\n                            export default _Document;\r\n"]},"metadata":{},"sourceType":"module"}