{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\nextpus_2020\\\\client\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Input, Button, Checkbox, Typography } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nconst {\n  Title\n} = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n  const {\n    0: formErrorMessage,\n    1: setFormErrorMessage\n  } = useState(\"\");\n  const {\n    0: rememberMe,\n    1: setRememberMe\n  } = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : \"\";\n  return __jsx(Formik, {\n    initialValues: {\n      email: initialEmail,\n      password: \"\"\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n      password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\")\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password\n        };\n        dispatch(loginUser(dataToSubmit)).then(response => {\n          if (response.payload.loginSuccess) {\n            window.localStorage.setItem(\"userId\", response.payload.userId);\n\n            if (rememberMe === true) {\n              window.localStorage.setItem(\"rememberMe\", values.id);\n            } else {\n              localStorage.removeItem(\"rememberMe\");\n            }\n\n            props.history.push(\"/\");\n          } else {\n            setFormErrorMessage(\"Check out your Account or Password again\");\n          }\n        }).catch(err => {\n          setFormErrorMessage(\"Check out your Account or Password again\");\n          setTimeout(() => {\n            setFormErrorMessage(\"\");\n          }, 3000);\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n    } = props;\n    return __jsx(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, __jsx(Title, {\n      level: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Log In\"), __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        width: \"350px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      id: \"email\",\n      prefix: __jsx(Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }),\n      placeholder: \"Enter your email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email ? \"text-input error\" : \"text-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), errors.email && touched.email && __jsx(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, errors.email)), __jsx(Form.Item, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      id: \"password\",\n      prefix: __jsx(Icon, {\n        type: \"lock\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }),\n      placeholder: \"Enter your password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password ? \"text-input error\" : \"text-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), errors.password && touched.password && __jsx(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, errors.password)), formErrorMessage && __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      style: {\n        color: \"#ff0000bf\",\n        fontSize: \"0.7rem\",\n        border: \"1px solid\",\n        padding: \"1rem\",\n        borderRadius: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, formErrorMessage)), __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, __jsx(Checkbox, {\n      id: \"rememberMe\",\n      onChange: handleRememberMe,\n      checked: rememberMe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"Remember me\"), __jsx(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"/reset_user\",\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"forgot password\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      style: {\n        minWidth: \"100%\"\n      },\n      disabled: isSubmitting,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, \"Log in\")), \"Or \", __jsx(\"a\", {\n      href: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 20\n      }\n    }, \"register now!\"))));\n  });\n}\n\nexport default withRouter(LoginPage);","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/pages/login.js"],"names":["React","useState","withRouter","loginUser","Formik","Yup","Form","Input","Button","Checkbox","Typography","Icon","useDispatch","Title","LoginPage","props","dispatch","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","email","password","object","shape","string","required","min","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","loginSuccess","window","setItem","userId","id","removeItem","history","push","catch","err","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","width","color","fontSize","border","padding","borderRadius","float","minWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCC,UAAxC,QAA0D,MAA1D;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYH,UAAlB;;AAEA,SAASI,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IAAqC,IAArC,GAA4C,KAAtE;AAEA,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CpB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM;AAAA,OAACqB,UAAD;AAAA,OAAaC;AAAb,MAA8BtB,QAAQ,CAACgB,iBAAD,CAA5C;;AAEA,QAAMO,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAGP,YAAY,CAACC,OAAb,CAAqB,YAArB,IACjBD,YAAY,CAACC,OAAb,CAAqB,YAArB,CADiB,GAEjB,EAFJ;AAIA,SACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbO,MAAAA,KAAK,EAAED,YADM;AAEbE,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,gBAAgB,EAAEtB,GAAG,CAACuB,MAAJ,GAAaC,KAAb,CAAmB;AACnCH,MAAAA,KAAK,EAAErB,GAAG,CAACyB,MAAJ,GACJJ,KADI,CACE,kBADF,EAEJK,QAFI,CAEK,mBAFL,CAD4B;AAInCJ,MAAAA,QAAQ,EAAEtB,GAAG,CAACyB,MAAJ,GACPE,GADO,CACH,CADG,EACA,wCADA,EAEPD,QAFO,CAEE,sBAFF;AAJyB,KAAnB,CALpB;AAaE,IAAA,QAAQ,EAAE,CAACE,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACvCC,MAAAA,UAAU,CAAC,MAAM;AACf,YAAIC,YAAY,GAAG;AACjBV,UAAAA,KAAK,EAAEO,MAAM,CAACP,KADG;AAEjBC,UAAAA,QAAQ,EAAEM,MAAM,CAACN;AAFA,SAAnB;AAKAX,QAAAA,QAAQ,CAACb,SAAS,CAACiC,YAAD,CAAV,CAAR,CACGC,IADH,CACQC,QAAQ,IAAI;AAChB,cAAIA,QAAQ,CAACC,OAAT,CAAiBC,YAArB,EAAmC;AACjCC,YAAAA,MAAM,CAACvB,YAAP,CAAoBwB,OAApB,CAA4B,QAA5B,EAAsCJ,QAAQ,CAACC,OAAT,CAAiBI,MAAvD;;AACA,gBAAIrB,UAAU,KAAK,IAAnB,EAAyB;AACvBmB,cAAAA,MAAM,CAACvB,YAAP,CAAoBwB,OAApB,CAA4B,YAA5B,EAA0CT,MAAM,CAACW,EAAjD;AACD,aAFD,MAEO;AACL1B,cAAAA,YAAY,CAAC2B,UAAb,CAAwB,YAAxB;AACD;;AACD9B,YAAAA,KAAK,CAAC+B,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,WARD,MAQO;AACL1B,YAAAA,mBAAmB,CAAC,0CAAD,CAAnB;AACD;AACF,SAbH,EAcG2B,KAdH,CAcSC,GAAG,IAAI;AACZ5B,UAAAA,mBAAmB,CAAC,0CAAD,CAAnB;AACAc,UAAAA,UAAU,CAAC,MAAM;AACfd,YAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,SAnBH;AAoBAa,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OA3BS,EA2BP,GA3BO,CAAV;AA4BD,KA1CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA4CGnB,KAAK,IAAI;AACR,UAAM;AACJkB,MAAAA,MADI;AAEJiB,MAAAA,OAFI;AAGJC,MAAAA,MAHI;AAIJC,MAAAA,KAJI;AAKJC,MAAAA,YALI;AAMJC,MAAAA,YANI;AAOJC,MAAAA,UAPI;AAQJC,MAAAA,YARI;AASJC,MAAAA;AATI,QAUF1C,KAVJ;AAWA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAM,MAAA,QAAQ,EAAEyC,YAAhB;AAA8B,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,QAAQ,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,MAAM,EACJ,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAKE,MAAA,WAAW,EAAC,kBALd;AAME,MAAA,IAAI,EAAC,OANP;AAOE,MAAA,KAAK,EAAE1B,MAAM,CAACP,KAPhB;AAQE,MAAA,QAAQ,EAAE4B,YARZ;AASE,MAAA,MAAM,EAAEC,UATV;AAUE,MAAA,SAAS,EACPJ,MAAM,CAACzB,KAAP,IAAgBwB,OAAO,CAACxB,KAAxB,GACI,kBADJ,GAEI,YAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAiBGyB,MAAM,CAACzB,KAAP,IAAgBwB,OAAO,CAACxB,KAAxB,IACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCyB,MAAM,CAACzB,KAAxC,CAlBJ,CADF,EAuBE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,QAAQ,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,MAAM,EACJ,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEiC,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAKE,MAAA,WAAW,EAAC,qBALd;AAME,MAAA,IAAI,EAAC,UANP;AAOE,MAAA,KAAK,EAAE1B,MAAM,CAACN,QAPhB;AAQE,MAAA,QAAQ,EAAE2B,YARZ;AASE,MAAA,MAAM,EAAEC,UATV;AAUE,MAAA,SAAS,EACPJ,MAAM,CAACxB,QAAP,IAAmBuB,OAAO,CAACvB,QAA3B,GACI,kBADJ,GAEI,YAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAiBGwB,MAAM,CAACxB,QAAP,IAAmBuB,OAAO,CAACvB,QAA3B,IACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCwB,MAAM,CAACxB,QAAxC,CAlBJ,CAvBF,EA6CGP,gBAAgB,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLuC,QAAAA,KAAK,EAAE,WADF;AAELC,QAAAA,QAAQ,EAAE,QAFL;AAGLC,QAAAA,MAAM,EAAE,WAHH;AAILC,QAAAA,OAAO,EAAE,MAJJ;AAKLC,QAAAA,YAAY,EAAE;AALT,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG3C,gBATH,CADF,CA9CJ,EA6DE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,QAAQ,EAAEI,gBAFZ;AAGE,MAAA,OAAO,EAAEF,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAQE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,KAAK,EAAE;AAAE0C,QAAAA,KAAK,EAAE;AAAT,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,QAAQ,EAAC,QAFX;AAGE,MAAA,SAAS,EAAC,mBAHZ;AAIE,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAJT;AAKE,MAAA,QAAQ,EAAEZ,YALZ;AAME,MAAA,QAAQ,EAAEG,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAfF,SA2BK;AAAG,MAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA3BL,CA7DF,CAFF,CADF;AAgGD,GAxJH,CADF;AA4JD;;AAED,eAAetD,UAAU,CAACY,SAAD,CAAzB","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Input, Button, Checkbox, Typography } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\")\r\n    ? localStorage.getItem(\"rememberMe\")\r\n    : \"\";\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem(\"userId\", response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem(\"rememberMe\", values.id);\r\n                } else {\r\n                  localStorage.removeItem(\"rememberMe\");\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage(\"Check out your Account or Password again\");\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage(\"Check out your Account or Password again\");\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\");\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: \"350px\" }}>\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label>\r\n                  <p\r\n                    style={{\r\n                      color: \"#ff0000bf\",\r\n                      fontSize: \"0.7rem\",\r\n                      border: \"1px solid\",\r\n                      padding: \"1rem\",\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    {formErrorMessage}\r\n                  </p>\r\n                </label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox\r\n                  id=\"rememberMe\"\r\n                  onChange={handleRememberMe}\r\n                  checked={rememberMe}\r\n                >\r\n                  Remember me\r\n                </Checkbox>\r\n                <a\r\n                  className=\"login-form-forgot\"\r\n                  href=\"/reset_user\"\r\n                  style={{ float: \"right\" }}\r\n                >\r\n                  forgot password\r\n                </a>\r\n                <div>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ minWidth: \"100%\" }}\r\n                    disabled={isSubmitting}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    Log in\r\n                  </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n"]},"metadata":{},"sourceType":"module"}