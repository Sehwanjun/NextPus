{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// 대소문자 구분: DB 시퀄라이즈 해당 정보와 다른정보가 합쳐질 경우 대문자로 나옴\n// id, content는 post 자체의 속성\n// imagePaths: 이미지 업로드시 이미지 경로저장\n// postAdded: 게시글 추가가 완료되었을 때 true\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"전세환\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프래스,\",\n    Images: [{\n      src: \"https://newsimg.hankookilbo.com/cms/articlerelease/2020/04/21/202004211422083541_3.jpg\"\n    }, {\n      src: \"https://wonderfulmind.co.kr/wp-content/uploads/2018/10/man-on-top-of-books-e1538933803436.jpg\"\n    }, {\n      src: \"http://tcpschool.com/lectures/img_deeplearning_07_reinforcement.png\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"nemes\"\n      },\n      content: \"우와 개정판이 나왔네요~\"\n    }, {\n      User: {\n        nickname: \"hemes\"\n      },\n      content: \"좋네욬ㅋㅋ\"\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nconst ADD_POST = \"ADD_POST\";\nexport const addPost = {\n  type: ADD_POST\n};\nconst dummyPost = {};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        painPosts: [dummyPost, ...state.mainPosts]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action","painPosts"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFR;AAMEC,IAAAA,OAAO,EAAE,wBANX;AAOEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,GAAG,EACD;AAFJ,KADM,EAKN;AACEA,MAAAA,GAAG,EACD;AAFJ,KALM,EASN;AACEA,MAAAA,GAAG,EACD;AAFJ,KATM,CAPV;AAqBEC,IAAAA,QAAQ,EAAE,CACR;AACEL,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KADQ,EAOR;AACEF,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KAPQ;AArBZ,GADS,CADe;AAuC1BI,EAAAA,UAAU,EAAE,EAvCc;AAwC1BC,EAAAA,SAAS,EAAE;AAxCe,CAArB;AA2CP,MAAMC,QAAQ,GAAG,UAAjB;AACA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAEF;AADe,CAAhB;AAIP,MAAMG,SAAS,GAAG,EAAlB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGhB,YAAT,EAAuBiB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKF,QAAL;AACE,6CACKK,KADL;AAEEE,QAAAA,SAAS,EAAE,CAACJ,SAAD,EAAY,GAAGE,KAAK,CAACf,SAArB;AAFb;;AAIF;AACE,aAAOe,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeD,OAAf","sourcesContent":["// 대소문자 구분: DB 시퀄라이즈 해당 정보와 다른정보가 합쳐질 경우 대문자로 나옴\r\n// id, content는 post 자체의 속성\r\n// imagePaths: 이미지 업로드시 이미지 경로저장\r\n// postAdded: 게시글 추가가 완료되었을 때 true\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: \"전세환\",\r\n      },\r\n      content: \"첫 번째 게시글 #해시태그 #익스프래스,\",\r\n      Images: [\r\n        {\r\n          src:\r\n            \"https://newsimg.hankookilbo.com/cms/articlerelease/2020/04/21/202004211422083541_3.jpg\",\r\n        },\r\n        {\r\n          src:\r\n            \"https://wonderfulmind.co.kr/wp-content/uploads/2018/10/man-on-top-of-books-e1538933803436.jpg\",\r\n        },\r\n        {\r\n          src:\r\n            \"http://tcpschool.com/lectures/img_deeplearning_07_reinforcement.png\",\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          User: {\r\n            nickname: \"nemes\",\r\n          },\r\n          content: \"우와 개정판이 나왔네요~\",\r\n        },\r\n        {\r\n          User: {\r\n            nickname: \"hemes\",\r\n          },\r\n          content: \"좋네욬ㅋㅋ\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n  postAdded: false,\r\n};\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nexport const addPost = {\r\n  type: ADD_POST,\r\n}\r\n\r\nconst dummyPost = {\r\n\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return{\r\n        ...state,\r\n        painPosts: [dummyPost, ...state.mainPosts]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}