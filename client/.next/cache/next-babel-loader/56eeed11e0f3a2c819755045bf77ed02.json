{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\"; // import user from \"./user\";\n// import post from \"./post\";\n\nconst initialState = {\n  user: {\n    isLoggdedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\n\nconst login = () => {\n  return {\n    type: 'LOG_IN'\n  };\n}; //async action creator(리덕스 사가)\n//action creator\n\n\nconst changeNickname = data => {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data\n  };\n};\n\nchangeNickname(\"neue zeal\"); // {type: 'CHANGE_NICKNAME', data: 'neue zeal'}\n\nstore.dispatch(changeNickname(\"mighty tak\")); // (이전상태, 액션) => 다음상태\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/reducers/index.js"],"names":["HYDRATE","combineReducers","initialState","user","isLoggdedIn","signUpData","loginData","post","mainPosts","login","type","changeNickname","data","store","dispatch","rootReducer","state","action","name"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CAEA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE;AACPC,IAAAA,WAAW,EAAE,KADN;AAEPD,IAAAA,IAAI,EAAE,IAFC;AAGPE,IAAAA,UAAU,EAAE,EAHL;AAIPC,IAAAA,SAAS,EAAE;AAJJ,GADc;AAOpBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AAPc,CAArB;;AAYA,MAAMC,KAAK,GAAG,MAAM;AAClB,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD,C,CAQA;AAEA;;;AACA,MAAMC,cAAc,GAAGC,IAAI,IAAI;AAC7B,SAAO;AAAEF,IAAAA,IAAI,EAAE,iBAAR;AAA2BE,IAAAA;AAA3B,GAAP;AACD,CAFD;;AAIAD,cAAc,CAAC,WAAD,CAAd,C,CACA;;AACAE,KAAK,CAACC,QAAN,CAAeH,cAAc,CAAC,YAAD,CAA7B,E,CAEA;;AACA,MAAMI,WAAW,GAAG,CAACC,KAAK,GAAGd,YAAT,EAAuBe,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACP,IAAf;AACE,SAAK,iBAAL;AACE,6CACKM,KADL;AAEEE,QAAAA,IAAI,EAAED,MAAM,CAACL;AAFf;AAFJ;AAOD,CARD;;AAUA,eAAeG,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport { combineReducers } from \"redux\";\r\n\r\n// import user from \"./user\";\r\n// import post from \"./post\";\r\n\r\nconst initialState = {\r\n user: {\r\nisLoggdedIn: false,\r\nuser: null,\r\nsignUpData: {},\r\nloginData: {},\r\n },\r\n post: {\r\n   mainPosts: [],\r\n }\r\n};\r\n\r\nconst login = () => {\r\n  return {\r\n    type: 'LOG_IN'\r\n  }\r\n}\r\n\r\n\r\n\r\n//async action creator(리덕스 사가)\r\n\r\n//action creator\r\nconst changeNickname = data => {\r\n  return { type: \"CHANGE_NICKNAME\", data };\r\n};\r\n\r\nchangeNickname(\"neue zeal\");\r\n// {type: 'CHANGE_NICKNAME', data: 'neue zeal'}\r\nstore.dispatch(changeNickname(\"mighty tak\"));\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_NICKNAME\":\r\n      return {\r\n        ...state,\r\n        name: action.data,\r\n      };\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}