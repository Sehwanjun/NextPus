{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\nextpus_2020\\\\client\\\\pages\\\\_document.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Document from \"next/document\";\nimport { ServerStyleSheet } from \"styled-components\";\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles(__jsx(App, _extends({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 59\n          }\n        })))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        styles: __jsx(React.Fragment, null, initialProps.styles, sheet.getStyleElement())\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n} // import React from \"react\";\n// import Document, { Head, Main, NextScript } from \"next/document\";\n// // Import styled components ServerStyleSheet\n// import { ServerStyleSheet } from \"styled-components\";\n// export default class MyDocument extends Document {\n//   static getInitialProps({ renderPage }) {\n//     // Step 1: Create an instance of ServerStyleSheet\n//     const sheet = new ServerStyleSheet();\n//     // Step 2: Retrieve styles from components in the page\n//     const page = renderPage(App => props =>\n//       sheet.collectStyles(<App {...props} />)\n//     );\n//     // Step 3: Extract the styles as <style> tags\n//     const styleTags = sheet.getStyleElement();\n//     // Step 4: Pass styleTags as a prop\n//     return { ...page, styleTags };\n//   }\n//   render() {\n//     return (\n//       <html>\n//         <Head>\n//           <title>My page</title>\n//           {/* Step 5: Output the styles in the head  */}\n//           {this.props.styleTags}\n//         </Head>\n//         <body>\n//           <Main />\n//           <NextScript />\n//         </body>\n//       </html>\n//     );\n//   }\n// }","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/pages/_document.js"],"names":["Document","ServerStyleSheet","MyDocument","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","initialProps","styles","getStyleElement","seal"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,eAArB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,eAAe,MAAMC,UAAN,SAAyBF,QAAzB,CAAkC;AAC/C,eAAaG,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd;AACA,UAAMK,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEA,QAAI;AACFH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,QAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,KAAK,CAACM,aAAN,CAAoB,MAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAApB;AADX,OAAD,CADpB;;AAKA,YAAME,YAAY,GAAG,MAAMZ,QAAQ,CAACG,eAAT,CAAyBC,GAAzB,CAA3B;AACA,6CACKQ,YADL;AAEEC,QAAAA,MAAM,EACJ,4BACGD,YAAY,CAACC,MADhB,EAEGR,KAAK,CAACS,eAAN,EAFH;AAHJ;AASD,KAhBD,SAgBU;AACRT,MAAAA,KAAK,CAACU,IAAN;AACD;AACF;;AAxB8C,C,CA2BjD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Document from \"next/document\";\r\nimport { ServerStyleSheet } from \"styled-components\";\r\n\r\nexport default class MyDocument extends Document {\r\n  static async getInitialProps(ctx) {\r\n    const sheet = new ServerStyleSheet();\r\n    const originalRenderPage = ctx.renderPage;\r\n\r\n    try {\r\n      ctx.renderPage = () =>\r\n        originalRenderPage({\r\n          enhanceApp: App => props => sheet.collectStyles(<App {...props} />),\r\n        });\r\n\r\n      const initialProps = await Document.getInitialProps(ctx);\r\n      return {\r\n        ...initialProps,\r\n        styles: (\r\n          <>\r\n            {initialProps.styles}\r\n            {sheet.getStyleElement()}\r\n          </>\r\n        ),\r\n      };\r\n    } finally {\r\n      sheet.seal();\r\n    }\r\n  }\r\n}\r\n\r\n// import React from \"react\";\r\n// import Document, { Head, Main, NextScript } from \"next/document\";\r\n// // Import styled components ServerStyleSheet\r\n// import { ServerStyleSheet } from \"styled-components\";\r\n\r\n// export default class MyDocument extends Document {\r\n//   static getInitialProps({ renderPage }) {\r\n//     // Step 1: Create an instance of ServerStyleSheet\r\n//     const sheet = new ServerStyleSheet();\r\n\r\n//     // Step 2: Retrieve styles from components in the page\r\n//     const page = renderPage(App => props =>\r\n//       sheet.collectStyles(<App {...props} />)\r\n//     );\r\n\r\n//     // Step 3: Extract the styles as <style> tags\r\n//     const styleTags = sheet.getStyleElement();\r\n\r\n//     // Step 4: Pass styleTags as a prop\r\n//     return { ...page, styleTags };\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <html>\r\n//         <Head>\r\n//           <title>My page</title>\r\n//           {/* Step 5: Output the styles in the head  */}\r\n//           {this.props.styleTags}\r\n//         </Head>\r\n//         <body>\r\n//           <Main />\r\n//           <NextScript />\r\n//         </body>\r\n//       </html>\r\n//     );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}