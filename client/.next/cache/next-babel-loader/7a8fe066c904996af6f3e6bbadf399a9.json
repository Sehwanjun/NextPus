{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\nextpus_2020\\\\client\\\\pages\\\\main.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\nimport MainLayout from \"../components/MainLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\n\nvar main = function main() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostsLoading = _useSelector2.loadPostsLoading; // 일단 처음 10개 보내기\n\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []); // 스크롤 맨 아래로 내리면 post 10개씩 더 불러오기\n  // (1) window.scrollY: 현재 처음부터 맨아래까지의 길이(스크롤안내릴때: 0)\n  // (2) clientHeight: 화면에 보이는 창 높이(고정)\n  // (3) scrollHeight: 제일 위부터 아래까지 고정된 총길이(스크롤까지)\n  // (1) + (2) = (3)\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            data: mainPosts[mainPosts.length - 1].id\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts, hasMorePost, loadPostsLoading]); // 만약 로그아웃시 메인화면으로 이동\n\n  useEffect(function () {\n    if (!(me && me.id)) {\n      Router.push(\"/\");\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return null;\n  }\n\n  return __jsx(MainLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }\n  }), mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(main, \"Tt2dwHKxAX5ot8qQj8DLiGeN1I4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\nexport default main;","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/pages/main.js"],"names":["React","useEffect","useSelector","useDispatch","Router","MainLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","main","dispatch","state","user","me","post","mainPosts","hasMorePost","loadPostsLoading","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","data","length","id","addEventListener","removeEventListener","push","map","c"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AADiB,qBAEFD,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFT;AAAA,MAETC,EAFS,gBAETA,EAFS;;AAAA,sBAGoCX,WAAW,CAC9D,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GADyD,CAH/C;AAAA,MAGTC,SAHS,iBAGTA,SAHS;AAAA,MAGEC,WAHF,iBAGEA,WAHF;AAAA,MAGeC,gBAHf,iBAGeA,gBAHf,EAMjB;;;AACAhB,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT,CAPiB,CAYjB;AACA;AACA;AACA;AACA;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACd,aAASkB,QAAT,GAAoB;AAClB,UACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIT,WAAW,IAAI,CAACC,gBAApB,EAAsC;AACpCP,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,IAAI,EAAEV,kBADC;AAEPkB,YAAAA,IAAI,EAAEX,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAT,CAAgCC;AAF/B,WAAD,CAAR;AAID;AACF;AACF;;AACDR,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC;AACD,KAFD;AAGD,GAlBQ,EAkBN,CAACJ,SAAD,EAAYC,WAAZ,EAAyBC,gBAAzB,CAlBM,CAAT,CAjBiB,CAqCjB;;AACAhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,EAAEY,EAAE,IAAIA,EAAE,CAACe,EAAX,CAAJ,EAAoB;AAClBxB,MAAAA,MAAM,CAAC2B,IAAP,CAAY,GAAZ;AACD;AACF,GAJQ,EAIN,CAAClB,EAAE,IAAIA,EAAE,CAACe,EAAV,CAJM,CAAT;;AAKA,MAAI,CAACf,EAAL,EAAS;AACP,WAAO,IAAP;AACD;;AACD,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGA,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJT,EAKGE,SAAS,CAACiB,GAAV,CAAc,UAAAC,CAAC;AAAA,WACd,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACL,EAAjB;AAAqB,MAAA,IAAI,EAAEK,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA,GAAf,CALH,CADF;AAWD,CAzDD;;GAAMxB,I;UACaN,W,EACFD,W,EACsCA,W;;;AAwDvD,eAAeO,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Router from \"next/router\";\r\nimport MainLayout from \"../components/MainLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\n\r\nconst main = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector(state => state.user);\r\n  const { mainPosts, hasMorePost, loadPostsLoading } = useSelector(\r\n    state => state.post\r\n  );\r\n  // 일단 처음 10개 보내기\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n  // 스크롤 맨 아래로 내리면 post 10개씩 더 불러오기\r\n  // (1) window.scrollY: 현재 처음부터 맨아래까지의 길이(스크롤안내릴때: 0)\r\n  // (2) clientHeight: 화면에 보이는 창 높이(고정)\r\n  // (3) scrollHeight: 제일 위부터 아래까지 고정된 총길이(스크롤까지)\r\n  // (1) + (2) = (3)\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (\r\n        window.scrollY + document.documentElement.clientHeight >\r\n        document.documentElement.scrollHeight - 300\r\n      ) {\r\n        if (hasMorePost && !loadPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            data: mainPosts[mainPosts.length - 1].id,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  }, [mainPosts, hasMorePost, loadPostsLoading]);\r\n\r\n  // 만약 로그아웃시 메인화면으로 이동\r\n  useEffect(() => {\r\n    if (!(me && me.id)) {\r\n      Router.push(\"/\");\r\n    }\r\n  }, [me && me.id]);\r\n  if (!me) {\r\n    return null;\r\n  }\r\n  return (\r\n    <MainLayout>\r\n      {/* 조건부 화면 보여주기 */}\r\n      {/* anti pattern: key에 index로 부여하지 말기! */}\r\n      {/* 게시글이 지워질 가능성이 있는 경우, 순서바뀌거나 등 절대 index 부여 X */}\r\n      {me && <PostForm />}\r\n      {mainPosts.map(c => (\r\n        <PostCard key={c.id} post={c} />\r\n      ))}\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default main;\r\n"]},"metadata":{},"sourceType":"module"}