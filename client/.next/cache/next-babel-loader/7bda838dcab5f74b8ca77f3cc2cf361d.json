{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\"; // const loggerMiddleware = ({ dispatch, getState }) => next => action => {\n//   console.log(action);\n//   return next(action);\n// };\n\nconst configureStore = () => {\n  // const sagaMiddleware = createSagaMiddleware();\n  // const middlewares = [sagaMiddleware, loggerMiddleware];\n  // const enhancer =\n  //   process.env.NODE_ENV === \"production\"\n  //     ? compose(applyMiddleware(...middlewares))\n  //     : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer); // store.sagaTask = sagaMiddleware.run(rootSaga);\n  // return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","configureStore","store","enhancer","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,KAAK,GAAGP,WAAW,CAACI,OAAD,EAAUI,QAAV,CAAzB,CAP2B,CAQ3B;AACA;AACD,CAVD;;AAYA,MAAMC,OAAO,GAAGX,aAAa,CAACQ,cAAD,EAAiB;AAC5CI,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, createStore, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport reducer from \"../reducers\";\r\nimport rootSaga from \"../sagas\";\r\n\r\n// const loggerMiddleware = ({ dispatch, getState }) => next => action => {\r\n//   console.log(action);\r\n//   return next(action);\r\n// };\r\n\r\nconst configureStore = () => {\r\n  // const sagaMiddleware = createSagaMiddleware();\r\n  // const middlewares = [sagaMiddleware, loggerMiddleware];\r\n  // const enhancer =\r\n  //   process.env.NODE_ENV === \"production\"\r\n  //     ? compose(applyMiddleware(...middlewares))\r\n  //     : composeWithDevTools(applyMiddleware(...middlewares));\r\n  const store = createStore(reducer, enhancer);\r\n  // store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  // return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}