{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\nextpus_2020\\\\client\\\\pages\\\\main.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\nimport MainLayout from \"../components/MainLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\n\nvar main = function main() {\n  _s();\n\n  // post 불러오기\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []); // (1) window.scrollY: 현재 처음부터 맨아래까지의 길이\n  // (2) clientHeight: 화면에 보이는 창 높이(고정)\n  // (3) scrollHeight: 제일 위부터 아래까지 고정된 총길이(스크롤까지)\n  // (1) + (2) = (3)\n\n  useEffect(function () {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; // 만약 로그아웃시 메인화면으로 이동\n\n\n  useEffect(function () {\n    if (me && me.id) {\n      Router.push(\"/\");\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return null;\n  }\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  return __jsx(MainLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }\n  }), mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(main, \"EKRyAvFUS3Z+tQDB1pnqG7b3Kyc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\nexport default main;","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/pages/main.js"],"names":["React","useEffect","useSelector","useDispatch","Router","MainLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","main","dispatch","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","state","user","me","id","push","post","mainPosts","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB;AACA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT,CAHiB,CASjB;AACA;AACA;AACA;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACd,aAASW,QAAT,GAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CACEC,MAAM,CAACC,OADT,EAEEC,QAAQ,CAACC,eAAT,CAAyBC,YAF3B,EAGEF,QAAQ,CAACC,eAAT,CAAyBE,YAH3B;AAKD;;AACDL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCT,QAAlC;AACA,WAAO,YAAM;AACXG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCV,QAArC;AACD,KAFD;AAGD,GAZQ,CAAT;;AAbiB,qBA2BFV,WAAW,CAAC,UAAAqB,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CA3BT;AAAA,MA2BTC,EA3BS,gBA2BTA,EA3BS,EA4BjB;;;AACAxB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIwB,EAAE,IAAIA,EAAE,CAACC,EAAb,EAAiB;AACftB,MAAAA,MAAM,CAACuB,IAAP,CAAY,GAAZ;AACD;AACF,GAJQ,EAIN,CAACF,EAAE,IAAIA,EAAE,CAACC,EAAV,CAJM,CAAT;;AAKA,MAAI,CAACD,EAAL,EAAS;AACP,WAAO,IAAP;AACD;;AApCgB,sBAqCKvB,WAAW,CAAC,UAAAqB,KAAK;AAAA,WAAIA,KAAK,CAACK,IAAV;AAAA,GAAN,CArChB;AAAA,MAqCTC,SArCS,iBAqCTA,SArCS;;AAsCjB,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGJ,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJT,EAKGI,SAAS,CAACC,GAAV,CAAc,UAAAF,IAAI;AAAA,WACjB,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACF,EAApB;AAAwB,MAAA,IAAI,EAAEE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAAlB,CALH,CADF;AAWD,CAjDD;;GAAMnB,I;UAEaN,W,EAyBFD,W,EAUOA,W;;;AAcxB,eAAeO,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Router from \"next/router\";\r\nimport MainLayout from \"../components/MainLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\n\r\nconst main = () => {\r\n  // post 불러오기\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  // (1) window.scrollY: 현재 처음부터 맨아래까지의 길이\r\n  // (2) clientHeight: 화면에 보이는 창 높이(고정)\r\n  // (3) scrollHeight: 제일 위부터 아래까지 고정된 총길이(스크롤까지)\r\n  // (1) + (2) = (3)\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      console.log(\r\n        window.scrollY,\r\n        document.documentElement.clientHeight,\r\n        document.documentElement.scrollHeight\r\n      );\r\n    }\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  });\r\n\r\n  const { me } = useSelector(state => state.user);\r\n  // 만약 로그아웃시 메인화면으로 이동\r\n  useEffect(() => {\r\n    if (me && me.id) {\r\n      Router.push(\"/\");\r\n    }\r\n  }, [me && me.id]);\r\n  if (!me) {\r\n    return null;\r\n  }\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  return (\r\n    <MainLayout>\r\n      {/* 조건부 화면 보여주기 */}\r\n      {/* anti pattern: key에 index로 부여하지 말기! */}\r\n      {/* 게시글이 지워질 가능성이 있는 경우, 순서바뀌거나 등 절대 index 부여 X */}\r\n      {me && <PostForm />}\r\n      {mainPosts.map(post => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default main;\r\n"]},"metadata":{},"sourceType":"module"}