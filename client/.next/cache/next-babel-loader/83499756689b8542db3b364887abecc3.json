{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  // const sagaMiddleware = createSagaMiddleware();\n  // const middlewares = [sagaMiddleware, loggerMiddleware];\n  // const enhancer =\n  //   process.env.NODE_ENV === \"production\"\n  //     ? compose(applyMiddleware(...middlewares))\n  //     : composeWithDevTools(applyMiddleware(...middlewares));\n  var store = createStore(reducer, enhancer); // store.sagaTask = sagaMiddleware.run(rootSaga);\n  // return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","store","enhancer","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA4B,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACrEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACD,KAHwD;AAAA,GAAhC;AAAA,CAAzB;;AAKA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGd,WAAW,CAACI,OAAD,EAAUW,QAAV,CAAzB,CAP2B,CAQ3B;AACA;AACD,CAVD;;AAYA,IAAMC,OAAO,GAAGlB,aAAa,CAACe,cAAD,EAAiB;AAC5CI,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, createStore, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport reducer from \"../reducers\";\r\nimport rootSaga from \"../sagas\";\r\n\r\nconst loggerMiddleware = ({ dispatch, getState }) => next => action => {\r\n  console.log(action);\r\n  return next(action);\r\n};\r\n\r\nconst configureStore = () => {\r\n  // const sagaMiddleware = createSagaMiddleware();\r\n  // const middlewares = [sagaMiddleware, loggerMiddleware];\r\n  // const enhancer =\r\n  //   process.env.NODE_ENV === \"production\"\r\n  //     ? compose(applyMiddleware(...middlewares))\r\n  //     : composeWithDevTools(applyMiddleware(...middlewares));\r\n  const store = createStore(reducer, enhancer);\r\n  // store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  // return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}