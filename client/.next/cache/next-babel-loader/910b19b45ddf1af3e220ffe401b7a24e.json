{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggingIn: false,\n  // 로그인 시도중 (로딩창 띄우기 위해)\n  isLoggdedIn: false,\n  isLoggingOut: false,\n  // 로그아웃 시도중 (로딩창 띄우기 위해)\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; // 액션명 변수로 빼주기(오타로 인한 에러방지)\n////////////////////////////////////////////////////\n///////////////////////actions//////////////////////\n////////////////////////////////////////////////////\n\nexport const loginRequestAction = data => {\n  return {\n    type: \"LOG_IN_REQUEST\",\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: \"LOG_OUT_REQUEST\"\n  };\n}; // SUCCESS, FAULURE 삭제이유: saga에서 호출을 해준다(yield put으로)\n////////////////////////////////////////////////////\n///////////////////////reducer//////////////////////\n////////////////////////////////////////////////////\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n\n    case \"LOG_IN_REQUEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case \"LOG_IN_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        // 임시방편으로 일단 고정시킴\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: \"sehwanJun\"\n        })\n      });\n\n    case \"LOG_IN_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case \"LOG_OUT_REQUEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case \"LOG_OUT_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case \"LOG_OUT_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggdedIn","isLoggingOut","me","signUpData","loginData","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","isLoggedIn","nickname"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,KADa;AACN;AACpBC,EAAAA,WAAW,EAAE,KAFa;AAG1BC,EAAAA,YAAY,EAAE,KAHY;AAGL;AACrBC,EAAAA,EAAE,EAAE,IAJsB;AAK1BC,EAAAA,UAAU,EAAE,EALc;AAM1BC,EAAAA,SAAS,EAAE;AANe,CAArB,C,CASP;AAGA;AACA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAGC,IAAI,IAAI;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAE,gBADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAMP;AAEA;AACA;AACA;;AACA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE;AACE,aAAOG,KAAP;;AACF,SAAK,gBAAL;AACE,6CACKA,KADL;AAEEX,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAK,gBAAL;AACE,6CACKW,KADL;AAEEX,QAAAA,WAAW,EAAE,KAFf;AAGEa,QAAAA,UAAU,EAAE,IAHd;AAIE;AACAV,QAAAA,EAAE,kCAAOS,MAAM,CAACL,IAAd;AAAoBO,UAAAA,QAAQ,EAAE;AAA9B;AALJ;;AAOF,SAAK,gBAAL;AACE,6CACKH,KADL;AAEEX,QAAAA,WAAW,EAAE,KAFf;AAGEa,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAK,iBAAL;AACE,6CACKF,KADL;AAEET,QAAAA,YAAY,EAAE;AAFhB;;AAIF,SAAK,iBAAL;AACE,6CACKS,KADL;AAEET,QAAAA,YAAY,EAAE,KAFhB;AAGEW,QAAAA,UAAU,EAAE,KAHd;AAIEV,QAAAA,EAAE,EAAE;AAJN;;AAMF,SAAK,iBAAL;AACE,6CACKQ,KADL;AAEET,QAAAA,YAAY,EAAE;AAFhB;AAnCJ;AAwCD,CAzCD;;AA2CA,eAAeQ,OAAf","sourcesContent":["export const initialState = {\r\n  isLoggingIn: false, // 로그인 시도중 (로딩창 띄우기 위해)\r\n  isLoggdedIn: false,\r\n  isLoggingOut: false, // 로그아웃 시도중 (로딩창 띄우기 위해)\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\n// 액션명 변수로 빼주기(오타로 인한 에러방지)\r\n\r\n\r\n////////////////////////////////////////////////////\r\n///////////////////////actions//////////////////////\r\n////////////////////////////////////////////////////\r\nexport const loginRequestAction = data => {\r\n  return {\r\n    type: \"LOG_IN_REQUEST\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: \"LOG_OUT_REQUEST\",\r\n  };\r\n};\r\n\r\n// SUCCESS, FAULURE 삭제이유: saga에서 호출을 해준다(yield put으로)\r\n\r\n////////////////////////////////////////////////////\r\n///////////////////////reducer//////////////////////\r\n////////////////////////////////////////////////////\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n    case \"LOG_IN_REQUEST\":\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n      };\r\n    case \"LOG_IN_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoggedIn: true,\r\n        // 임시방편으로 일단 고정시킴\r\n        me: { ...action.data, nickname: \"sehwanJun\" },\r\n      };\r\n    case \"LOG_IN_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoggedIn: false,\r\n      };\r\n    case \"LOG_OUT_REQUEST\":\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n    case \"LOG_OUT_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isLoggedIn: false,\r\n        me: null,\r\n      };\r\n    case \"LOG_OUT_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n      };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}