{"ast":null,"code":"// import Document from \"next/document\";\n// import { ServerStyleSheet } from \"styled-components\";\n// export default class MyDocument extends Document {\n//   static async getInitialProps(ctx) {\n//     const sheet = new ServerStyleSheet();\n//     const originalRenderPage = ctx.renderPage;\n//     try {\n//       ctx.renderPage = () =>\n//         originalRenderPage({\n//           enhanceApp: App => props => sheet.collectStyles(<App {...props} />),\n//         });\n//       const initialProps = await Document.getInitialProps(ctx);\n//       return {\n//         ...initialProps,\n//         styles: (\n//           <>\n//             {initialProps.styles}\n//             {sheet.getStyleElement()}\n//           </>\n//         ),\n//       };\n//     } finally {\n//       sheet.seal();\n//     }\n//   }\n// }\n// import React from \"react\";\n// import Document, { Head, Main, NextScript } from \"next/document\";\n// // Import styled components ServerStyleSheet\n// import { ServerStyleSheet } from \"styled-components\";\n// export default class MyDocument extends Document {\n//   static getInitialProps({ renderPage }) {\n//     // Step 1: Create an instance of ServerStyleSheet\n//     const sheet = new ServerStyleSheet();\n//     // Step 2: Retrieve styles from components in the page\n//     const page = renderPage(App => props =>\n//       sheet.collectStyles(<App {...props} />)\n//     );\n//     // Step 3: Extract the styles as <style> tags\n//     const styleTags = sheet.getStyleElement();\n//     // Step 4: Pass styleTags as a prop\n//     return { ...page, styleTags };\n//   }\n//   render() {\n//     return (\n//       <html>\n//         <Head>\n//           <title>My page</title>\n//           {/* Step 5: Output the styles in the head  */}\n//           {this.props.styleTags}\n//         </Head>\n//         <body>\n//           <Main />\n//           <NextScript />\n//         </body>\n//       </html>\n//     );\n//   }\n// }","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/pages/_document.js"],"names":[],"mappings":"AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\n\r\n\r\n// import Document from \"next/document\";\r\n// import { ServerStyleSheet } from \"styled-components\";\r\n\r\n// export default class MyDocument extends Document {\r\n//   static async getInitialProps(ctx) {\r\n//     const sheet = new ServerStyleSheet();\r\n//     const originalRenderPage = ctx.renderPage;\r\n\r\n//     try {\r\n//       ctx.renderPage = () =>\r\n//         originalRenderPage({\r\n//           enhanceApp: App => props => sheet.collectStyles(<App {...props} />),\r\n//         });\r\n\r\n//       const initialProps = await Document.getInitialProps(ctx);\r\n//       return {\r\n//         ...initialProps,\r\n//         styles: (\r\n//           <>\r\n//             {initialProps.styles}\r\n//             {sheet.getStyleElement()}\r\n//           </>\r\n//         ),\r\n//       };\r\n//     } finally {\r\n//       sheet.seal();\r\n//     }\r\n//   }\r\n// }\r\n\r\n// import React from \"react\";\r\n// import Document, { Head, Main, NextScript } from \"next/document\";\r\n// // Import styled components ServerStyleSheet\r\n// import { ServerStyleSheet } from \"styled-components\";\r\n\r\n// export default class MyDocument extends Document {\r\n//   static getInitialProps({ renderPage }) {\r\n//     // Step 1: Create an instance of ServerStyleSheet\r\n//     const sheet = new ServerStyleSheet();\r\n\r\n//     // Step 2: Retrieve styles from components in the page\r\n//     const page = renderPage(App => props =>\r\n//       sheet.collectStyles(<App {...props} />)\r\n//     );\r\n\r\n//     // Step 3: Extract the styles as <style> tags\r\n//     const styleTags = sheet.getStyleElement();\r\n\r\n//     // Step 4: Pass styleTags as a prop\r\n//     return { ...page, styleTags };\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <html>\r\n//         <Head>\r\n//           <title>My page</title>\r\n//           {/* Step 5: Output the styles in the head  */}\r\n//           {this.props.styleTags}\r\n//         </Head>\r\n//         <body>\r\n//           <Main />\r\n//           <NextScript />\r\n//         </body>\r\n//       </html>\r\n//     );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"script"}