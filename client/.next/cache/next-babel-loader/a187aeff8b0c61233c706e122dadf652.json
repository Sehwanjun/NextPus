{"ast":null,"code":"// import axios from \"axios\";\nimport { delay, put, all, fork, takeLatest } from \"redux-saga/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS // generateDummyPost,\n// LOAD_POSTS_FAILURE,\n// LOAD_POSTS_REQUEST,\n// LOAD_POSTS_SUCCESS,\n// REMOVE_POST_FAILURE,\n// REMOVE_POST_REQUEST,\n// REMOVE_POST_SUCCESS,\n} from \"../reducers/post\"; // function addPostAPI(data) {\n//   return axios.post(\"/api/post\", data);\n// }\n// eslint-disable-next-line no-unused-vars\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000); // 임시보류 const result = yield call(addPostAPI, action.data);\n\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data // 포스팅에 글 입력한 내용\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n} // function addCommentAPI(data) {\n//   return axios.post(`/api/post/${data.postId}/comment`, data);\n// }\n\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/sagas/post.js"],"names":["delay","put","all","fork","takeLatest","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPost","action","type","data","err","response","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA;AACA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,gBAJF,EAKEC,gBALF,EAMEC,gBANF,CAOE;AACA;AACA;AACA;AACA;AACA;AACA;AAbF,OAcO,kBAdP,C,CAgBA;AACA;AACA;AAEA;;AACA,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMZ,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;AACA,UAAMC,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEH,gBADE;AAERI,MAAAA,IAAI,EAAEF,MAAM,CAACE,IAFL,CAEW;;AAFX,KAAD,CAAT;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMd,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEL,gBADE;AAERM,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAFX,KAAD,CAAT;AAID;AACF,C,CAED;AACA;AACA;;;AAEA,UAAUG,UAAV,CAAqBL,MAArB,EAA6B;AAC3B,MAAI;AACF;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEN,mBADE;AAERO,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMd,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAER,mBADE;AAERS,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUI,YAAV,GAAyB;AACvB,QAAMd,UAAU,CAACK,gBAAD,EAAmBE,OAAnB,CAAhB;AACD;;AAED,UAAUQ,eAAV,GAA4B;AAC1B,QAAMf,UAAU,CAACE,mBAAD,EAAsBW,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACe,YAAD,CAAL,EAAqBf,IAAI,CAACgB,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["// import axios from \"axios\";\r\nimport { delay, put, all, fork, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  // generateDummyPost,\r\n  // LOAD_POSTS_FAILURE,\r\n  // LOAD_POSTS_REQUEST,\r\n  // LOAD_POSTS_SUCCESS,\r\n  // REMOVE_POST_FAILURE,\r\n  // REMOVE_POST_REQUEST,\r\n  // REMOVE_POST_SUCCESS,\r\n} from \"../reducers/post\";\r\n\r\n// function addPostAPI(data) {\r\n//   return axios.post(\"/api/post\", data);\r\n// }\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nfunction* addPost(action) {\r\n  try {\r\n    yield delay(1000);\r\n    // 임시보류 const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: action.data, // 포스팅에 글 입력한 내용\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// function addCommentAPI(data) {\r\n//   return axios.post(`/api/post/${data.postId}/comment`, data);\r\n// }\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    // const result = yield call(addCommentAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}