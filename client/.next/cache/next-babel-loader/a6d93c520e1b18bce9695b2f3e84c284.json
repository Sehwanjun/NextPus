{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\nextpus_2020\\\\client\\\\components\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport Router from \"next/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useinput\";\nimport { loginRequestAction } from \"../reducers/user\"; /// /////////// Styled Component //////////////////\n\nconst ButtonWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__ButtonWrapper\",\n  componentId: \"sc-184ko4u-0\"\n})([\"margin-top:10px;\"]);\nconst FormWrapper = styled(Form).withConfig({\n  displayName: \"LoginForm__FormWrapper\",\n  componentId: \"sc-184ko4u-1\"\n})([\"padding:10px;\"]); // const style= useMemo(()=>({marginTop: 10}),[]);\n// return(<Input.Search style={style}></Input.Search>)\n// 리랜더링 방지하면서 style 꾸밀수 있게끔\n\nconst LoginForm = () => {\n  const dispatch = useDispatch(); // 로그인을 위한 리덕스 연결고리\n  // initialstate >user > isloggedin(state.user: state.user.isLoggedin과 동일)\n  // 구조분해할당\n\n  const {\n    logInLoading,\n    logInError\n  } = useSelector(state => state.user); // hooks/useinput.js 활용(라이브러리 개념 hooks)\n\n  const [email, onChangeEmail] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\"); // const [id, setId] = useState(\"\"); 8줄을 hooks로 줄임\n  // const onChangeId = useCallback(e => {\n  //   setId(e.target.value);\n  // }, []);\n  // const [password, setPassword] = useState(\"\");\n  // const onChangePassword = useCallback(e => {\n  //   setPassword(e.target.value);\n  // }, []);\n\n  useEffect(() => {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]); // props로 넘기는 함수: callback으로 처리(always)\n  // const handleLoginClick = useCallback(e => {\n  //   Router.push(\"/main\");\n  // });\n\n  const onSubmitForm = useCallback(() => {\n    // if (isloggedIn) {\n    //   Router.push(\"/main\");\n    // } else {\n    //   alert(\"로그인에 실패하였습니다.\");\n    // }\n    // if (isLoggedIn){\n    // dispatch(loginAction(id, password));\n    // console.log(id, password);\n    // Router.push(\"/main\")}else{alert(\"Login failure\")}\n    dispatch(loginRequestAction({\n      email,\n      password\n    }));\n    console.log(email, password);\n    Router.push(\"/main\");\n  }, [email, password]);\n  return (// onFinish: e.preventdefault 자동으로 설정되어 있음(antd)\n    __jsx(FormWrapper, {\n      onFinish: onSubmitForm,\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), __jsx(Input, {\n      name: \"user-email\",\n      value: email,\n      type: \"email\",\n      onChange: onChangeEmail,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), __jsx(Input, {\n      name: \"user-password\",\n      type: \"password\",\n      value: password,\n      onChange: onChangePassword,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    })), __jsx(ButtonWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, __jsx(Button // onClick={handleLoginClick}\n    , {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: logInLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n      href: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))), __jsx(Link, {\n      href: \"/passwordfinder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB2E4\\uBA74?\")))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }))\n  );\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/components/LoginForm.js"],"names":["React","useCallback","useEffect","Form","Input","Button","Link","styled","Router","useDispatch","useSelector","useInput","loginRequestAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","logInLoading","logInError","state","user","email","onChangeEmail","password","onChangePassword","alert","onSubmitForm","console","log","push","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC,C,CAEA;;AACA,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,wBAAnB;AAIA,MAAMC,WAAW,GAAGR,MAAM,CAACJ,IAAD,CAAT;AAAA;AAAA;AAAA,qBAAjB,C,CAIA;AACA;AACA;;AAEA,MAAMa,SAAS,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CADsB,CAGtB;AACA;AACA;;AACA,QAAM;AAAES,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+BT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAhD,CANsB,CAQtB;;AACA,QAAM,CAACC,KAAD,EAAQC,aAAR,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACa,QAAD,EAAWC,gBAAX,IAA+Bd,QAAQ,CAAC,EAAD,CAA7C,CAVsB,CAWtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,UAAJ,EAAgB;AACdO,MAAAA,KAAK,CAACP,UAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT,CApBsB,CA0BtB;AAEA;AACA;AACA;;AAEA,QAAMQ,YAAY,GAAG1B,WAAW,CAAC,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAgB,IAAAA,QAAQ,CACNL,kBAAkB,CAAC;AACjBU,MAAAA,KADiB;AAEjBE,MAAAA;AAFiB,KAAD,CADZ,CAAR;AAMAI,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmBE,QAAnB;AACAhB,IAAAA,MAAM,CAACsB,IAAP,CAAY,OAAZ;AACD,GAlB+B,EAkB7B,CAACR,KAAD,EAAQE,QAAR,CAlB6B,CAAhC;AAoBA,SACE;AACA,UAAC,WAAD;AAAa,MAAA,QAAQ,EAAEG,YAAvB;AAAqC,MAAA,KAAK,EAAE;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,KAAK,EAAET,KAFT;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,QAAQ,EAAEC,aAJZ;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAEC,QAHT;AAIE,MAAA,QAAQ,EAAEC,gBAJZ;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAZF,EAuBE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD,CACE;AADF;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,QAAQ,EAAC,QAHX;AAIE,MAAA,OAAO,EAAEP,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EASE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,CATF,EAcE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEADF,CADF,CAdF,CAvBF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF;AAFF;AAgDD,CApGD;;AAsGA,eAAeF,SAAf","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport Link from \"next/link\";\r\nimport styled from \"styled-components\";\r\nimport Router from \"next/router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useInput from \"../hooks/useinput\";\r\nimport { loginRequestAction } from \"../reducers/user\";\r\n\r\n/// /////////// Styled Component //////////////////\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n  padding: 10px;\r\n`;\r\n\r\n// const style= useMemo(()=>({marginTop: 10}),[]);\r\n// return(<Input.Search style={style}></Input.Search>)\r\n// 리랜더링 방지하면서 style 꾸밀수 있게끔\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // 로그인을 위한 리덕스 연결고리\r\n  // initialstate >user > isloggedin(state.user: state.user.isLoggedin과 동일)\r\n  // 구조분해할당\r\n  const { logInLoading, logInError } = useSelector(state => state.user);\r\n\r\n  // hooks/useinput.js 활용(라이브러리 개념 hooks)\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  // const [id, setId] = useState(\"\"); 8줄을 hooks로 줄임\r\n  // const onChangeId = useCallback(e => {\r\n  //   setId(e.target.value);\r\n  // }, []);\r\n  // const [password, setPassword] = useState(\"\");\r\n  // const onChangePassword = useCallback(e => {\r\n  //   setPassword(e.target.value);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    if (logInError) {\r\n      alert(logInError);\r\n    }\r\n  }, [logInError]);\r\n\r\n  // props로 넘기는 함수: callback으로 처리(always)\r\n\r\n  // const handleLoginClick = useCallback(e => {\r\n  //   Router.push(\"/main\");\r\n  // });\r\n\r\n  const onSubmitForm = useCallback(() => {\r\n    // if (isloggedIn) {\r\n    //   Router.push(\"/main\");\r\n    // } else {\r\n    //   alert(\"로그인에 실패하였습니다.\");\r\n    // }\r\n    // if (isLoggedIn){\r\n    // dispatch(loginAction(id, password));\r\n    // console.log(id, password);\r\n    // Router.push(\"/main\")}else{alert(\"Login failure\")}\r\n    dispatch(\r\n      loginRequestAction({\r\n        email,\r\n        password,\r\n      })\r\n    );\r\n    console.log(email, password);\r\n    Router.push(\"/main\");\r\n  }, [email, password]);\r\n\r\n  return (\r\n    // onFinish: e.preventdefault 자동으로 설정되어 있음(antd)\r\n    <FormWrapper onFinish={onSubmitForm} style={{ padding: \"10px\" }}>\r\n      <div>\r\n        <label htmlFor=\"user-id\">아이디</label>\r\n        <br />\r\n        <Input\r\n          name=\"user-email\"\r\n          value={email}\r\n          type=\"email\"\r\n          onChange={onChangeEmail}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"user-password\">비밀번호</label>\r\n        <br />\r\n        <Input\r\n          name=\"user-password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={onChangePassword}\r\n          required\r\n        />\r\n      </div>\r\n      <ButtonWrapper>\r\n        <Button\r\n          // onClick={handleLoginClick}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          loading={logInLoading}\r\n        >\r\n          로그인\r\n        </Button>\r\n        <Link href=\"/signup\">\r\n          <a>\r\n            <Button>회원가입</Button>\r\n          </a>\r\n        </Link>\r\n        <Link href=\"/passwordfinder\">\r\n          <a>\r\n            <p>비밀번호를 잊으셨다면?</p>\r\n          </a>\r\n        </Link>\r\n      </ButtonWrapper>\r\n      <div />\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}