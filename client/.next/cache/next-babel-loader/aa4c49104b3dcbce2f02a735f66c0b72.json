{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\nextpus_2020\\\\client\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport useInput from \"../hooks/useInput\";\nimport { loginAction } from \"../reducers/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router from \"next/router\"; ////////////// Styled Component //////////////////\n\nvar ButtonWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__ButtonWrapper\",\n  componentId: \"sc-184ko4u-0\"\n})([\"margin-top:10px;\"]);\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form).withConfig({\n  displayName: \"LoginForm__FormWrapper\",\n  componentId: \"sc-184ko4u-1\"\n})([\"padding:10px;\"]); // const style= useMemo(()=>({marginTop: 10}),[]);\n// return(<Input.Search style={style}></Input.Search>)\n// 리랜더링 방지하면서 style 꾸밀수 있게끔\n\n_c2 = FormWrapper;\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      logInLoading = _useSelector.logInLoading,\n      logInError = _useSelector.logInError; //로그인을 위한 리덕스 연결고리\n  //initialstate >user > isloggedin(state.user: state.user.isLoggedin과 동일)\n  //구조분해할당\n\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector2.isLoggedIn; // hooks의 useinput.js 활용(라이브러리 개념 hooks)\n\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1]; // const [id, setId] = useState(\"\"); 8줄을 hooks로 줄임\n  // const onChangeId = useCallback(e => {\n  //   setId(e.target.value);\n  // }, []);\n  // const [password, setPassword] = useState(\"\");\n  // const onChangePassword = useCallback(e => {\n  //   setPassword(e.target.value);\n  // }, []);\n\n\n  useEffect(function () {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]); // props로 넘기는 함수: callback으로 처리(always)\n\n  var handleLoginClick = useCallback(function (e) {\n    Router.push(\"/main\");\n  });\n  var onSubmitForm = useCallback(function (e) {\n    // if (isloggedIn) {\n    //   Router.push(\"/main\");\n    // } else {\n    //   alert(\"로그인에 실패하였습니다.\");\n    // }\n    // if (isLoggedIn){\n    // dispatch(loginAction(id, password));\n    // console.log(id, password);\n    // Router.push(\"/main\")}else{alert(\"Login failure\")}\n    dispatch(loginAction({\n      id: id,\n      password: password\n    }));\n    console.log(id, password);\n    Router.push(\"/main\");\n  }, [id, password]);\n  return (// onFinish: e.preventdefault 자동으로 설정되어 있음(antd)\n    __jsx(FormWrapper, {\n      onFinish: onSubmitForm,\n      style: {\n        padding: \"10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), __jsx(Input, {\n      name: \"user-id\",\n      value: id,\n      onChange: onChangeId,\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), __jsx(Input, {\n      name: \"user-password\",\n      type: \"password\",\n      value: password,\n      onChange: onChangePassword,\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    })), __jsx(ButtonWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      onClick: handleLoginClick,\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: logInLoading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n      href: \"/signup\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }))\n  );\n};\n\n_s(LoginForm, \"8gAESNbiA72nwvlWaQdT37/LuVc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput, useInput];\n});\n\n_c3 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/components/LoginForm.js"],"names":["React","useCallback","useEffect","Form","Input","Button","Link","styled","useInput","loginAction","useDispatch","useSelector","Router","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","state","user","logInLoading","logInError","isLoggedIn","id","onChangeId","password","onChangePassword","alert","handleLoginClick","e","push","onSubmitForm","console","log","padding"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport Link from \"next/link\";\r\nimport styled from \"styled-components\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { loginAction } from \"../reducers/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Router from \"next/router\";\r\n////////////// Styled Component //////////////////\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n  padding: 10px;\r\n`;\r\n\r\n// const style= useMemo(()=>({marginTop: 10}),[]);\r\n// return(<Input.Search style={style}></Input.Search>)\r\n// 리랜더링 방지하면서 style 꾸밀수 있게끔\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { logInLoading, logInError } = useSelector(state => state.user);\r\n\r\n  //로그인을 위한 리덕스 연결고리\r\n  //initialstate >user > isloggedin(state.user: state.user.isLoggedin과 동일)\r\n  //구조분해할당\r\n  const { isLoggedIn } = useSelector(state => state.user);\r\n\r\n  // hooks의 useinput.js 활용(라이브러리 개념 hooks)\r\n  const [id, onChangeId] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  // const [id, setId] = useState(\"\"); 8줄을 hooks로 줄임\r\n  // const onChangeId = useCallback(e => {\r\n  //   setId(e.target.value);\r\n  // }, []);\r\n  // const [password, setPassword] = useState(\"\");\r\n  // const onChangePassword = useCallback(e => {\r\n  //   setPassword(e.target.value);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    if (logInError) {\r\n      alert(logInError);\r\n    }\r\n  }, [logInError]);\r\n\r\n  // props로 넘기는 함수: callback으로 처리(always)\r\n\r\n  const handleLoginClick = useCallback(e => {\r\n    Router.push(\"/main\");\r\n  });\r\n\r\n  const onSubmitForm = useCallback(\r\n    e => {\r\n      // if (isloggedIn) {\r\n      //   Router.push(\"/main\");\r\n      // } else {\r\n      //   alert(\"로그인에 실패하였습니다.\");\r\n      // }\r\n      // if (isLoggedIn){\r\n      // dispatch(loginAction(id, password));\r\n      // console.log(id, password);\r\n      // Router.push(\"/main\")}else{alert(\"Login failure\")}\r\n      dispatch(\r\n        loginAction({\r\n          id,\r\n          password,\r\n        })\r\n      );\r\n      console.log(id, password);\r\n      Router.push(\"/main\");\r\n    },\r\n    [id, password]\r\n  );\r\n\r\n  return (\r\n    // onFinish: e.preventdefault 자동으로 설정되어 있음(antd)\r\n    <FormWrapper onFinish={onSubmitForm} style={{ padding: \"10px\" }}>\r\n      <div>\r\n        <label htmlFor=\"user-id\">아이디</label>\r\n        <br />\r\n        <Input name=\"user-id\" value={id} onChange={onChangeId} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"user-password\">비밀번호</label>\r\n        <br />\r\n        <Input\r\n          name=\"user-password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={onChangePassword}\r\n          required\r\n        />\r\n      </div>\r\n      <ButtonWrapper>\r\n        <Button\r\n          onClick={handleLoginClick}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          loading={logInLoading}\r\n        >\r\n          로그인\r\n        </Button>\r\n        <Link href=\"/signup\">\r\n          <a>\r\n            <Button>회원가입</Button>\r\n          </a>\r\n        </Link>\r\n      </ButtonWrapper>\r\n      <div></div>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}