{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\nextpus_2020\\\\client\\\\components\\\\ImagesZoom\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slick from \"react-slick\";\nimport { Overlay, Global, Header, CloseButton, SlickWrapper, ImageWrapper, Indicator } from \"./styles\";\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  _s();\n\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  // 현재 슬라이드 (번호?)에 대한 state\n  var _useState = useState(0),\n      currentSlide = _useState[0],\n      setCurrentSlide = _useState[1];\n\n  var handleKeyPress = useCallback(function (e) {\n    if (e.key == 27) {\n      onClose();\n    }\n  }, []);\n  return __jsx(Overlay, {\n    onKeyDown: handleKeyPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Global, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(CloseButton, {\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"X\")), __jsx(SlickWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Slick, {\n    initialSlide: 0 // 슬라이드 넘길때 번호 부여\n    // arrows: 양옆에 화살표 버튼\n    ,\n    beforeChange: function beforeChange(slide) {\n      return setCurrentSlide(slide);\n    },\n    infinite: true,\n    arrows: false,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, images.map(function (v) {\n    return __jsx(ImageWrapper, {\n      key: v.src,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      src: v.src,\n      alt: v.src,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }));\n  })), __jsx(Indicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, currentSlide + 1, \"\", \"/\", images.length)))));\n};\n\n_s(ImagesZoom, \"HUrGoyd9e3DYZ5IrAQ9rjZD/6zQ=\");\n\n_c = ImagesZoom;\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesZoom\");","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/components/ImagesZoom/index.js"],"names":["React","useState","useCallback","PropTypes","Slick","Overlay","Global","Header","CloseButton","SlickWrapper","ImageWrapper","Indicator","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","handleKeyPress","e","key","slide","map","v","src","length","propTypes","arrayOf","object","isRequired","func"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SACEC,OADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,SAPF,QAQO,UARP;;AAUA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA;;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC1C;AAD0C,kBAEFb,QAAQ,CAAC,CAAD,CAFN;AAAA,MAEnCc,YAFmC;AAAA,MAErBC,eAFqB;;AAI1C,MAAMC,cAAc,GAAGf,WAAW,CAAC,UAAAgB,CAAC,EAAI;AACtC,QAAIA,CAAC,CAACC,GAAF,IAAS,EAAb,EAAiB;AACfL,MAAAA,OAAO;AACR;AACF,GAJiC,EAI/B,EAJ+B,CAAlC;AAMA,SACE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEG,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEH,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CAFF,EAME,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,YAAY,EAAE,CADhB,CAEE;AACA;AAHF;AAIE,IAAA,YAAY,EAAE,sBAAAM,KAAK;AAAA,aAAIJ,eAAe,CAACI,KAAD,CAAnB;AAAA,KAJrB;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,MAAM,EAAE,KANV;AAOE,IAAA,YAAY,EAAE,CAPhB;AAQE,IAAA,cAAc,EAAE,CARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGP,MAAM,CAACQ,GAAP,CAAW,UAAAC,CAAC;AAAA,WACX,MAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,CAAC,CAACC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAED,CAAC,CAACC,GAAZ;AAAiB,MAAA,GAAG,EAAED,CAAC,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADW;AAAA,GAAZ,CAVH,CADF,EAkBE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,YAAY,GAAG,CADlB,EAEG,EAFH,OAEQF,MAAM,CAACW,MAFf,CADF,CAlBF,CADF,CANF,CADF;AAoCD,CA9CD;;GAAMZ,U;;KAAAA,U;AAgDNA,UAAU,CAACa,SAAX,GAAuB;AACrBZ,EAAAA,MAAM,EAAEV,SAAS,CAACuB,OAAV,CAAkBvB,SAAS,CAACwB,MAA5B,EAAoCC,UADvB;AAErBd,EAAAA,OAAO,EAAEX,SAAS,CAAC0B,IAAV,CAAeD;AAFH,CAAvB;AAKA,eAAehB,UAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Slick from \"react-slick\";\r\nimport {\r\n  Overlay,\r\n  Global,\r\n  Header,\r\n  CloseButton,\r\n  SlickWrapper,\r\n  ImageWrapper,\r\n  Indicator,\r\n} from \"./styles\";\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  // 현재 슬라이드 (번호?)에 대한 state\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  const handleKeyPress = useCallback(e => {\r\n    if (e.key == 27) {\r\n      onClose();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Overlay onKeyDown={handleKeyPress}>\r\n      <Global />\r\n      <Header>\r\n        <h1>상세 이미지</h1>\r\n        <CloseButton onClick={onClose}>X</CloseButton>\r\n      </Header>\r\n      <SlickWrapper>\r\n        <div>\r\n          <Slick\r\n            initialSlide={0}\r\n            // 슬라이드 넘길때 번호 부여\r\n            // arrows: 양옆에 화살표 버튼\r\n            beforeChange={slide => setCurrentSlide(slide)}\r\n            infinite\r\n            arrows={false}\r\n            slidesToShow={1}\r\n            slidesToScroll={1}\r\n          >\r\n            {images.map(v => (\r\n              <ImageWrapper key={v.src}>\r\n                <img src={v.src} alt={v.src} />\r\n              </ImageWrapper>\r\n            ))}\r\n          </Slick>\r\n          {/* 페이지 쪽수 화면 하단에 나타내기 */}\r\n          <Indicator>\r\n            <div>\r\n              {currentSlide + 1}\r\n              {\"\"}/{images.length}\r\n            </div>\r\n          </Indicator>\r\n        </div>\r\n      </SlickWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;\r\n"]},"metadata":{},"sourceType":"module"}