{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\nextpus_2020\\\\client\\\\components\\\\FollowButton.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport { Button } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from \"../reducers/user\"; // FollowButton 클릭시: userprofile의 follow counting, 언팔로우버튼으로 변경, profile에 추가\n\nconst FollowButton = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user); // isFollowing = me : 내가 팔로잉한사람들중에 게시글작성자 아이디가 팔로잉 목록에 있다면\n  // 그 사람 아이디만 보내주면 됨(data:post.User.id)\n\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n  return (// loading={followLoading || unfollowLoading}\n    __jsx(Button, {\n      onClick: onClickButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, isFollowing ? \"언팔로우\" : \"팔로우\")\n  );\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/components/FollowButton.js"],"names":["React","useCallback","Button","PropTypes","useSelector","useDispatch","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","dispatch","me","state","user","isFollowing","Followings","find","v","id","User","onClickButton","type","data","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASP,WAAW,CACxBQ,KAAK,IAAIA,KAAK,CAACC,IADS,CAA1B,CAFiC,CAKjC;AACA;;AACA,QAAMC,WAAW,GAAGH,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEI,UAAJ,CAAeC,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAAST,IAAI,CAACU,IAAL,CAAUD,EAA5C,CAApB;AACA,QAAME,aAAa,GAAGnB,WAAW,CAAC,MAAM;AACtC,QAAIa,WAAJ,EAAiB;AACfJ,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEd,gBADC;AAEPe,QAAAA,IAAI,EAAEb,IAAI,CAACU,IAAL,CAAUD;AAFT,OAAD,CAAR;AAID,KALD,MAKO;AACLR,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEf,cADC;AAEPgB,QAAAA,IAAI,EAAEb,IAAI,CAACU,IAAL,CAAUD;AAFT,OAAD,CAAR;AAID;AACF,GAZgC,EAY9B,CAACJ,WAAD,CAZ8B,CAAjC;AAcA,SACE;AACA,UAAC,MAAD;AAAQ,MAAA,OAAO,EAAEM,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,WAAW,GAAG,MAAH,GAAY,KAD1B;AAFF;AAMD,CA5BD;;AA8BAN,YAAY,CAACe,SAAb,GAAyB;AACvBd,EAAAA,IAAI,EAAEN,SAAS,CAACqB,MAAV,CAAiBC;AADA,CAAzB;AAIA,eAAejB,YAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from \"../reducers/user\";\r\n\r\n// FollowButton 클릭시: userprofile의 follow counting, 언팔로우버튼으로 변경, profile에 추가\r\nconst FollowButton = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector(\r\n    state => state.user\r\n  );\r\n  // isFollowing = me : 내가 팔로잉한사람들중에 게시글작성자 아이디가 팔로잉 목록에 있다면\r\n  // 그 사람 아이디만 보내주면 됨(data:post.User.id)\r\n  const isFollowing = me?.Followings.find(v => v.id === post.User.id);\r\n  const onClickButton = useCallback(() => {\r\n    if (isFollowing) {\r\n      dispatch({\r\n        type: UNFOLLOW_REQUEST,\r\n        data: post.User.id,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: FOLLOW_REQUEST,\r\n        data: post.User.id,\r\n      });\r\n    }\r\n  }, [isFollowing]);\r\n\r\n  return (\r\n    // loading={followLoading || unfollowLoading}\r\n    <Button onClick={onClickButton}>\r\n      {isFollowing ? \"언팔로우\" : \"팔로우\"}\r\n    </Button>\r\n  );\r\n};\r\n\r\nFollowButton.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FollowButton;\r\n"]},"metadata":{},"sourceType":"module"}