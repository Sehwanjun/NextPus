{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\nextpus_2020\\\\client\\\\components\\\\PostImages.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nvar PostImages = function PostImages(_ref) {\n  _s();\n\n  var images = _ref.images;\n\n  ///////이미지 캐루셀 구현하기(이미지 확대시 집중해서 보이게끔)\n  var _useState = useState(false),\n      showImagesZoom = _useState[0],\n      setShowImagesZoom = _useState[1];\n\n  var onZoom = useCallback(function () {\n    setShowImagesZoom(true);\n  }, []); //바로 return할 수가 있네.. 조건부 따라서\n\n  if (images.length === 1) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      role: \"presentation\" // style={{ maxHeight: \"200px\" }}\n      ,\n      src: images[0].src,\n      alt: images[0].src,\n      onClick: onZoom,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (images.length === 2) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      role: \"presentation\",\n      style: {\n        width: \"50%\",\n        display: \"inline-block\"\n      },\n      src: images[0].src,\n      alt: images[0].src,\n      onClick: onZoom,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), __jsx(\"img\", {\n      role: \"presentation\",\n      style: {\n        width: \"50%\",\n        display: \"inline-block\"\n      },\n      src: images[1].src,\n      alt: images[1].src,\n      onClick: onZoom,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    role: \"presentation\",\n    style: {\n      width: \"50%\"\n    },\n    src: images[0].src,\n    alt: images[0].src,\n    onClick: onZoom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    role: \"presentation\",\n    style: {\n      display: \"inline-block\",\n      width: \"50%\",\n      textAlign: \"center\",\n      verticalAlign: \"middle\"\n    },\n    onClick: onZoom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(PlusOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\")));\n};\n\n_s(PostImages, \"UE9uMxceBgwv4jfRR4p3tn5mPaU=\");\n\n_c = PostImages;\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired\n};\nexport default PostImages; // import React, { useCallback, useState } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { PlusOutlined } from \"@ant-design/icons\";\n// import ImagesZoom from \"./ImagesZoom\";\n// const PostImages = ({ images }) => {\n//   const [showImagesZoom, setShowImagesZoom] = useState(false);\n//   const onZoom = useCallback(() => {\n//     setShowImagesZoom(true);\n//   }, []);\n//   const onClose = useCallback(() => {\n//     setShowImagesZoom(false);\n//   }, []);\n//   if (images.length === 1) {\n//     return (\n//       <>\n//         <img\n//           role=\"presentation\"\n//           src={images[0].src}\n//           alt={images[0].src}\n//           onClick={onZoom}\n//         />\n//         {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n//       </>\n//     );\n//   }\n//   if (images.length === 2) {\n//     return (\n//       <>\n//         <div>\n//           <img\n//             role=\"presentation\"\n//             src={images[0].src}\n//             alt={images[0].src}\n//             width=\"50%\"\n//             onClick={onZoom}\n//           />\n//           <img\n//             role=\"presentation\"\n//             src={images[1].src}\n//             alt={images[1].src}\n//             width=\"50%\"\n//             onClick={onZoom}\n//           />\n//         </div>\n//         {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n//       </>\n//     );\n//   }\n//   return (\n//     <>\n//       <div>\n//         <img\n//           role=\"presentation\"\n//           src={images[0].src}\n//           alt={images[0].src}\n//           width=\"50%\"\n//           onClick={onZoom}\n//         />\n//         <div\n//           role=\"presentation\"\n//           style={{\n//             display: \"inline-block\",\n//             width: \"50%\",\n//             textAlign: \"center\",\n//             verticalAlign: \"middle\",\n//           }}\n//           onClick={onZoom}\n//         >\n//           <PlusOutlined />\n//           <br />\n//           {images.length - 1}\n//           개의 사진 더보기\n//         </div>\n//       </div>\n//       {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n//     </>\n//   );\n// };\n// PostImages.propTypes = {\n//   images: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       src: PropTypes.string,\n//     })\n//   ).isRequired,\n// };\n// export default PostImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostImages\");","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/components/PostImages.js"],"names":["React","useState","useCallback","PropTypes","PlusOutlined","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","length","src","width","display","textAlign","verticalAlign","propTypes","arrayOf","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst PostImages = ({ images }) => {\r\n  ///////이미지 캐루셀 구현하기(이미지 확대시 집중해서 보이게끔)\r\n  const [showImagesZoom, setShowImagesZoom] = useState(false);\r\n\r\n  const onZoom = useCallback(() => {\r\n    setShowImagesZoom(true);\r\n  }, []);\r\n\r\n  //바로 return할 수가 있네.. 조건부 따라서\r\n  if (images.length === 1) {\r\n    return (\r\n      <>\r\n        <img\r\n          role=\"presentation\"\r\n          // style={{ maxHeight: \"200px\" }}\r\n          src={images[0].src}\r\n          alt={images[0].src}\r\n          onClick={onZoom}\r\n        />\r\n        \r\n      </>\r\n    );\r\n  }\r\n  if (images.length === 2) {\r\n    return (\r\n      <>\r\n        <img\r\n          role=\"presentation\"\r\n          style={{ width: \"50%\", display: \"inline-block\" }}\r\n          src={images[0].src}\r\n          alt={images[0].src}\r\n          onClick={onZoom}\r\n        />\r\n        <img\r\n          role=\"presentation\"\r\n          style={{ width: \"50%\", display: \"inline-block\" }}\r\n          src={images[1].src}\r\n          alt={images[1].src}\r\n          onClick={onZoom}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <img\r\n          role=\"presentation\"\r\n          style={{ width: \"50%\" }}\r\n          src={images[0].src}\r\n          alt={images[0].src}\r\n          onClick={onZoom}\r\n        />\r\n        {/* 우측에 n개사진 더보기 div */}\r\n        <div\r\n          role=\"presentation\"\r\n          style={{\r\n            display: \"inline-block\",\r\n            width: \"50%\",\r\n            textAlign: \"center\",\r\n            verticalAlign: \"middle\",\r\n          }}\r\n          onClick={onZoom}\r\n        >\r\n          <PlusOutlined />\r\n          <br />\r\n          {images.length - 1}\r\n          개의 사진 더보기\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPostImages.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      src: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default PostImages;\r\n\r\n// import React, { useCallback, useState } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n// import { PlusOutlined } from \"@ant-design/icons\";\r\n\r\n// import ImagesZoom from \"./ImagesZoom\";\r\n\r\n// const PostImages = ({ images }) => {\r\n//   const [showImagesZoom, setShowImagesZoom] = useState(false);\r\n\r\n//   const onZoom = useCallback(() => {\r\n//     setShowImagesZoom(true);\r\n//   }, []);\r\n\r\n//   const onClose = useCallback(() => {\r\n//     setShowImagesZoom(false);\r\n//   }, []);\r\n\r\n//   if (images.length === 1) {\r\n//     return (\r\n//       <>\r\n//         <img\r\n//           role=\"presentation\"\r\n//           src={images[0].src}\r\n//           alt={images[0].src}\r\n//           onClick={onZoom}\r\n//         />\r\n//         {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n//       </>\r\n//     );\r\n//   }\r\n//   if (images.length === 2) {\r\n//     return (\r\n//       <>\r\n//         <div>\r\n//           <img\r\n//             role=\"presentation\"\r\n//             src={images[0].src}\r\n//             alt={images[0].src}\r\n//             width=\"50%\"\r\n//             onClick={onZoom}\r\n//           />\r\n//           <img\r\n//             role=\"presentation\"\r\n//             src={images[1].src}\r\n//             alt={images[1].src}\r\n//             width=\"50%\"\r\n//             onClick={onZoom}\r\n//           />\r\n//         </div>\r\n//         {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n//       </>\r\n//     );\r\n//   }\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <img\r\n//           role=\"presentation\"\r\n//           src={images[0].src}\r\n//           alt={images[0].src}\r\n//           width=\"50%\"\r\n//           onClick={onZoom}\r\n//         />\r\n//         <div\r\n//           role=\"presentation\"\r\n//           style={{\r\n//             display: \"inline-block\",\r\n//             width: \"50%\",\r\n//             textAlign: \"center\",\r\n//             verticalAlign: \"middle\",\r\n//           }}\r\n//           onClick={onZoom}\r\n//         >\r\n//           <PlusOutlined />\r\n//           <br />\r\n//           {images.length - 1}\r\n//           개의 사진 더보기\r\n//         </div>\r\n//       </div>\r\n//       {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// PostImages.propTypes = {\r\n//   images: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       src: PropTypes.string,\r\n//     })\r\n//   ).isRequired,\r\n// };\r\n\r\n// export default PostImages;\r\n"]},"metadata":{},"sourceType":"module"}