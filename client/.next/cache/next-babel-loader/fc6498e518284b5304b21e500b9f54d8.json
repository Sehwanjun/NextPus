{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\"; // import user from \"./user\";\n// import post from \"./post\";\n\nvar initialState = {\n  user: {\n    isLoggdedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\n\nvar login = function login(data) {\n  return {\n    type: \"LOG_IN\",\n    data: data\n  };\n}; //async action creator(리덕스 사가)\n// //action creator\n// const changeNickname = data => {\n//   return { type: \"CHANGE_NICKNAME\", data };\n// };\n// changeNickname(\"neue zeal\");\n// // {type: 'CHANGE_NICKNAME', data: 'neue zeal'}\n// store.dispatch(changeNickname(\"mighty tak\"));\n// (이전상태, 액션) => 다음상태\n\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/arthu/Documents/nextpus_2020/client/reducers/index.js"],"names":["HYDRATE","combineReducers","initialState","user","isLoggdedIn","signUpData","loginData","post","mainPosts","login","data","type","rootReducer","state","action","name"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CAEA;AACA;;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,KADT;AAEJD,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADa;AAOnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AAPa,CAArB;;AAYA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,IAAI,EAAI;AACpB,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALD,C,CAOA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AACpD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAK,iBAAL;AACE,6CACKE,KADL;AAEEE,QAAAA,IAAI,EAAED,MAAM,CAACJ;AAFf;AAFJ;AAOD,CARD;;AAUA,eAAeE,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport { combineReducers } from \"redux\";\r\n\r\n// import user from \"./user\";\r\n// import post from \"./post\";\r\n\r\nconst initialState = {\r\n  user: {\r\n    isLoggdedIn: false,\r\n    user: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n  },\r\n  post: {\r\n    mainPosts: [],\r\n  },\r\n};\r\n\r\nconst login = data => {\r\n  return {\r\n    type: \"LOG_IN\",\r\n    data,\r\n  };\r\n};\r\n\r\n//async action creator(리덕스 사가)\r\n\r\n// //action creator\r\n// const changeNickname = data => {\r\n//   return { type: \"CHANGE_NICKNAME\", data };\r\n// };\r\n\r\n// changeNickname(\"neue zeal\");\r\n// // {type: 'CHANGE_NICKNAME', data: 'neue zeal'}\r\n// store.dispatch(changeNickname(\"mighty tak\"));\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_NICKNAME\":\r\n      return {\r\n        ...state,\r\n        name: action.data,\r\n      };\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}